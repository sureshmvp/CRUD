/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN LineDetailActionsGenerated.js PLEASE EDIT ../LineDetailActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import LineDetailApi from "../../../api/LineDetailApi";

let actionsFunction = {

  //CRUD METHODS

  // Create linedetail
  createLineDetail: function(linedetail) {
    return function(dispatch) {
      return LineDetailApi
        .createLineDetail(linedetail)
        .then(linedetail => {
          dispatch(actionsFunction.createLineDetailSuccess(linedetail));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createLineDetailSuccess: function(linedetail) {
    return { type: types.CREATE_LINEDETAIL_SUCCESS, payload: linedetail };
  },


  // Delete linedetail
  deleteLineDetail: function(id) {
    return function(dispatch) {
      return LineDetailApi
        .deleteLineDetail(id)
        .then(linedetail => {
          dispatch(actionsFunction.deleteLineDetailSuccess(linedetail));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteLineDetailSuccess: function(linedetail) {
    return { type: types.DELETE_LINEDETAIL_SUCCESS, payload: linedetail };
  },


  // Get linedetail
  loadLineDetail: function(id) {
    return function(dispatch) {
      return LineDetailApi
        .getOneLineDetail(id)
        .then(linedetail => {
          dispatch(actionsFunction.loadLineDetailSuccess(linedetail));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLineDetailSuccess: function(linedetail) {
    return { type: types.GET_LINEDETAIL_SUCCESS, payload: linedetail };
  },

  // Load  list
  loadLineDetailList: function() {
    return function(dispatch) {
      return LineDetailApi
        .getLineDetailList()
        .then(list => {
          dispatch(actionsFunction.loadLineDetailListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLineDetailListSuccess: function(list) {
    return { type: types.LIST_LINEDETAIL_SUCCESS, payload: list };
  },

	
  // Save linedetail
  saveLineDetail: function(linedetail) {
    return function(dispatch) {
      return LineDetailApi
        .saveLineDetail(linedetail)
        .then(linedetail => {
          dispatch(actionsFunction.saveLineDetailSuccess(linedetail));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveLineDetailSuccess: function(linedetail) {
    return { type: types.UPDATE_LINEDETAIL_SUCCESS, payload: linedetail };
  },


};

export default actionsFunction;
